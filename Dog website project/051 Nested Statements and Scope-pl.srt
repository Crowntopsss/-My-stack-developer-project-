1
00:00:05,750 --> 00:00:07,910
Witaj wszystkich w tym wykładzie.

2
00:00:07,910 --> 00:00:14,010
Zaczniemy od omówienia zakresu, a instrukcje zagnieżdżone w zakresie ogólnym to koncepcja, która określa,

3
00:00:14,010 --> 00:00:18,780
gdzie można rzeczywiście zobaczyć lub uzyskać dostęp do zmiennej, a jeśli

4
00:00:18,780 --> 00:00:23,850
przeskakujesz bezpośrednio do poziomu Python, to prawdopodobnie masz już intuicyjne zrozumienie tej

5
00:00:23,850 --> 00:00:24,420
idei zakresu.

6
00:00:24,600 --> 00:00:29,250
Ale zamierzamy zrobić bardziej formalną dyskusję na ten temat i pokazać kilka rzeczy, o których być

7
00:00:29,250 --> 00:00:30,540
może jeszcze nie myślałeś.

8
00:00:30,600 --> 00:00:31,350
Więc zacznijmy.

9
00:00:31,350 --> 00:00:35,280
Przejdziemy do edytora tekstowego i zrobimy tylko kilka eksperymentów, aby

10
00:00:35,280 --> 00:00:37,410
bardziej formalnie przedstawić ten pomysł zakresu.

11
00:00:37,410 --> 00:00:40,280
Zacznijmy od szybkiego eksperymentu myślowego.

12
00:00:40,410 --> 00:00:48,630
Ustawię zmienną x równą łańcuchowi zewnętrznemu, a następnie utworzę funkcję o nazwie dalej niż

13
00:00:48,630 --> 00:00:52,360
raport, a raport nie przyjmuje żadnych argumentów.

14
00:00:52,530 --> 00:01:01,050
To, co robi, ustawia X równe wewnątrz, a potem zwraca return x.

15
00:01:01,070 --> 00:01:08,210
Tak więc teraz pytanie brzmi, czy mam powiedzieć wydruki X, czego byś się spodziewał.

16
00:01:08,310 --> 00:01:12,610
Czy spodziewałbyś się zobaczyć na zewnątrz lub w środku.

17
00:01:13,110 --> 00:01:19,890
W tym momencie idea zakresu wchodzi zasadniczo w zakres, gdy Python jest pytany o określenie

18
00:01:19,890 --> 00:01:22,690
rodzaju zmiennej, do której się odnosisz.

19
00:01:22,710 --> 00:01:27,560
W tym przypadku Python chce wiedzieć, do czego odwołuje się X, kiedy wywołujesz 7 tutaj.

20
00:01:27,570 --> 00:01:29,460
Więc uruchommy to i zobaczmy, co się stanie.

21
00:01:30,750 --> 00:01:36,930
Zauważ, że mówi poza nim, co w zasadzie oznacza, że ​​odnosi się do x tutaj x

22
00:01:36,930 --> 00:01:41,420
jest równe zewnętrznej, zamiast ponownego przypisania, które dzieje się wewnątrz raportu.

23
00:01:41,430 --> 00:01:46,080
Być może masz już na to trochę intuicji, ponieważ technicznie nie wywołujesz raportu, aby wykonać go

24
00:01:46,080 --> 00:01:48,650
w dowolnym miejscu, w którym właśnie zdefiniowałeś tę funkcję.

25
00:01:48,690 --> 00:01:50,230
Właściwie to nie nazwałem.

26
00:01:50,460 --> 00:01:55,210
Czasami, co jest mylące dla początkujących, wyobraźmy sobie, że robię zgłoszenie.

27
00:01:55,410 --> 00:01:57,560
Więc mam sporządzony raport.

28
00:01:57,600 --> 00:02:01,760
Właściwie to mówię raport drukowania.

29
00:02:01,920 --> 00:02:06,210
Tak więc wydrukuję raport, który powinien zwrócić x w tym przypadku jest w środku.

30
00:02:06,360 --> 00:02:08,160
A potem znowu drukuje X.

31
00:02:08,160 --> 00:02:09,240
Teraz czego się spodziewasz.

32
00:02:09,270 --> 00:02:13,780
Czy spodziewasz się zobaczyć wnętrze na zewnątrz lub wewnątrz.

33
00:02:13,800 --> 00:02:17,430
Cóż, powiedzmy to i dowiedz się.

34
00:02:17,440 --> 00:02:20,250
W tym przypadku widzimy wewnątrz i na zewnątrz.

35
00:02:20,320 --> 00:02:25,380
Rezultat uruchomienia raportu sprawia, że ​​to ponowne przypisanie x jest równe wewnątrz.

36
00:02:25,480 --> 00:02:30,260
Ale zauważ, że nie wpływa to na globalny zakres egzegetyczności na zewnątrz.

37
00:02:30,340 --> 00:02:36,020
Kiedy powiesz "Drukuj X" bez żadnego odniesienia do tej funkcji, będziesz nadal mówić na zewnątrz.

38
00:02:36,280 --> 00:02:39,760
Tak więc cały ten powód tego typu dzieje się z powodu zakresu.

39
00:02:39,850 --> 00:02:42,220
Załóżmy, że omówimy ten pomysł zakresu.

40
00:02:42,550 --> 00:02:43,520
I w prostych słowach.

41
00:02:43,520 --> 00:02:47,160
Zasadniczo pojęcie zakresu można opisać w trzech ogólnych zasadach.

42
00:02:47,260 --> 00:02:51,840
Jednym z nich jest to, że przydziały nazw będą domyślnie tworzyć lub zmieniać nazwy lokalne.

43
00:02:52,560 --> 00:02:57,180
Dwa to ta nazwa odwołuje się do wyszukiwania co najwyżej dla zakresów.

44
00:02:57,180 --> 00:03:00,000
Porozmawiajmy o nich dla zakresu.

45
00:03:00,000 --> 00:03:03,300
Są one znane jako reguła LGB L e G-B.

46
00:03:05,040 --> 00:03:15,080
A to oznacza lokalne włączanie globalne i wbudowane.

47
00:03:15,810 --> 00:03:21,300
Więc, co się stanie, to Python będzie wyszukiwał w tej kolejności zakresów, aby spróbować dowiedzieć

48
00:03:21,390 --> 00:03:23,580
się, do czego naprawdę się odwołujesz.

49
00:03:23,580 --> 00:03:27,630
Więc jeśli nie może znaleźć czegoś na miejscu, zaczną szukać w funkcji włączania.

50
00:03:27,630 --> 00:03:32,370
Jeśli nie uda się znaleźć odnośnika, funkcja włączania rozpocznie się globalnie na poziomie modułu.

51
00:03:32,370 --> 00:03:37,980
Zasadniczo cały skrypt Pythona, jeśli nadal nie może go znaleźć, zacznie analizować wbudowane

52
00:03:37,980 --> 00:03:42,100
słowa kluczowe w Pythonie, takie jak funkcja długości Eliane.

53
00:03:42,110 --> 00:03:45,460
Teraz, aby właściwie zbudować zrozumienie każdego z tych zakresów.

54
00:03:45,530 --> 00:03:47,330
Właściwie przejrzyj kilka ich przykładów.

55
00:03:47,360 --> 00:03:49,270
Zamierzam wyczyścić ten kod właśnie tutaj.

56
00:03:50,110 --> 00:03:52,260
Wrócimy do tego później.

57
00:03:52,360 --> 00:03:56,950
Na razie pozwól mi pokazać przykład lokalnego i właściwie to właśnie zrobiliśmy

58
00:03:56,950 --> 00:03:58,090
wewnątrz tej funkcji.

59
00:03:58,150 --> 00:04:02,740
Tak więc powiem, że raport X jest równy lokalnemu.

60
00:04:02,740 --> 00:04:04,520
A więc jest to

61
00:04:07,850 --> 00:04:14,150
zadanie lokalne, a jeśli powiem, że print x x będzie najpierw poszukiwany lokalnie.

62
00:04:14,150 --> 00:04:16,190
Tak więc tutaj, w lokalnym zakresie

63
00:04:19,020 --> 00:04:23,210
topnienia, należy spojrzeć na ten następny zakres, który nazywa się włączaniem.

64
00:04:23,260 --> 00:04:26,090
Jest to więc przykład funkcji zawierającej funkcję lokalną.

65
00:04:26,110 --> 00:04:28,750
A więc ten pierwszy to zadanie lokalne.

66
00:04:28,750 --> 00:04:30,720
Teraz chcę sprawdzić włączenie.

67
00:04:30,910 --> 00:04:34,630
Tak więc nastąpi to, gdy masz funkcję wewnątrz innej funkcji.

68
00:04:34,630 --> 00:04:36,610
Tak naprawdę widzimy przykład tego.

69
00:04:36,610 --> 00:04:38,230
Wypróbujmy to.

70
00:04:38,320 --> 00:04:41,960
Powiem, że x jest równy ciągowi.

71
00:04:41,980 --> 00:04:49,730
Jest to poziom globalny i jest to poziom globalny, ponieważ nie ma wgłębień i nie ma w nim

72
00:04:49,730 --> 00:04:54,630
innej funkcji, a żeby to pokazać, zamierzam kometować całą naszą poprzednią funkcję.

73
00:04:54,650 --> 00:04:58,000
Teraz jest to jedyny kod życia wewnątrz tego skryptu Pythona.

74
00:04:58,160 --> 00:05:11,650
Więc mówię, że X jest parametrem lub zmienną poziomu globalnego, wtedy powiem, że F zawiera dwukropek, a ja powiem, że x

75
00:05:11,650 --> 00:05:13,110
jest równy.

76
00:05:13,270 --> 00:05:19,000
I tutaj przypiszę to włączając poziom.

77
00:05:19,080 --> 00:05:24,000
Wtedy wewnątrz mojej funkcji włączania funkcji tworzę kolejną funkcję.

78
00:05:24,590 --> 00:05:27,920
Zauważ tutaj, jak ta funkcja znajduje się wewnątrz funkcji otaczającej.

79
00:05:27,920 --> 00:05:38,850
Spójrz uważnie na moje wcięcie, a potem wydrukuję x, a potem zadzwonię do środka.

80
00:05:38,850 --> 00:05:42,600
Dlatego też należy bardzo uważać na faktyczne wcięcie.

81
00:05:42,960 --> 00:05:47,390
Cały ten kod tutaj znajduje się w ramach tej włączonej funkcji.

82
00:05:47,400 --> 00:05:50,750
Więc to, co się tutaj dzieje, definiuję z włączeniem funkcji.

83
00:05:50,880 --> 00:05:53,970
Ustawiam tę zmienną x równą poziomowi włączania.

84
00:05:54,300 --> 00:06:00,840
Potem mówię, że ta druga funkcja w środku będzie drukować X, a następnie zamierzam wywołać

85
00:06:00,840 --> 00:06:02,490
funkcję wewnętrzną do wykonania.

86
00:06:02,490 --> 00:06:10,800
Co oznacza, gdy wywołuję funkcję włączania do x Q. Mówi, że X definiuje wnętrze, a następnie wykonuje je wewnątrz.

87
00:06:10,800 --> 00:06:13,470
Więc teraz tutaj X Mam ten globalny poziom.

88
00:06:13,470 --> 00:06:17,280
Więc teraz pojawia się pytanie, czy jest to w dalszym ciągu w moim scenariuszu.

89
00:06:17,280 --> 00:06:18,780
Pozwól mi tu trochę przestrzeni.

90
00:06:21,470 --> 00:06:26,320
Być może rzeczywiście widzisz wcięcie bardzo wyraźnie, ale jeśli w dalszej części

91
00:06:26,360 --> 00:06:29,840
skryptu zajmiesz godzinę, aby wykonać włączanie Co powinienem zobaczyć.

92
00:06:29,940 --> 00:06:35,320
Czy spodziewam się, że będzie to poziom globalny lub obejmujący poziom.

93
00:06:35,630 --> 00:06:38,100
Cóż, pomyślmy o regule L EJB.

94
00:06:38,540 --> 00:06:42,680
Tak więc w tym przypadku będziemy podążać za L E G B.

95
00:06:42,680 --> 00:06:48,410
Tak więc najpierw szukamy czegoś, co lokalny lokator coś takiego wygląda lokalnie.

96
00:06:48,650 --> 00:06:53,740
Kiedy odkomentujemy to, abyśmy mogli to sprawdzić, jest to zadanie lokalne.

97
00:06:53,750 --> 00:06:55,240
Więc X wygląda lokalnie.

98
00:06:55,250 --> 00:06:59,070
Sprawdź, czy znajdujesz coś na tym samym poziomie wcięcia i tam jest lokalny.

99
00:06:59,120 --> 00:07:01,380
Właśnie tego Python chce najpierw szukać.

100
00:07:02,400 --> 00:07:04,590
Więc mówimy tu o Prince X i pythonach.

101
00:07:04,610 --> 00:07:04,990
OK.

102
00:07:05,010 --> 00:07:10,860
Pozwól mi zobaczyć, czy mogę znaleźć coś, gdzie x jest zdefiniowane lokalnie i szuka całej funkcji wewnętrznej i nie

103
00:07:11,130 --> 00:07:12,130
może jej znaleźć.

104
00:07:12,240 --> 00:07:12,750
To mówi.

105
00:07:12,750 --> 00:07:13,100
W porządku.

106
00:07:13,110 --> 00:07:14,410
Więc L jest gotowe.

107
00:07:14,550 --> 00:07:16,970
Teraz nadszedł czas na przeszukanie.

108
00:07:17,040 --> 00:07:19,570
Tak więc funkcja włączania jest tą całą funkcją.

109
00:07:20,070 --> 00:07:23,790
A potem może znaleźć tutaj x jest równy wliczając poziom.

110
00:07:23,790 --> 00:07:24,900
Tak właśnie jest z tym.

111
00:07:24,900 --> 00:07:26,000
Zatrzymuje się właśnie tam.

112
00:07:26,010 --> 00:07:30,240
Nie musi już dalej podskakiwać i zacząć szukać globalnej zmiennej.

113
00:07:30,720 --> 00:07:34,770
Więc jeśli miałbym to zapisać i uruchomić, aby upewnić się, że wszystko inne skomentuje.

114
00:07:35,630 --> 00:07:40,850
Uruchommy skrypt i widzimy, że włączanie poziomu zgodnie z oczekiwaniami.

115
00:07:40,850 --> 00:07:42,590
Więc nie jest to już lokalne.

116
00:07:42,590 --> 00:07:44,150
Zamiast tego jest w tym.

117
00:07:44,480 --> 00:07:45,100
OK.

118
00:07:45,320 --> 00:07:47,660
Porozmawiajmy teraz o poziomie globalnym.

119
00:07:47,900 --> 00:07:52,400
Zamierzam więc skomentować to zadanie tutaj.

120
00:07:53,730 --> 00:07:55,440
Mam zamiar to jeszcze raz uratować.

121
00:07:55,650 --> 00:08:00,310
I pamiętaj, że kolejność, jakiej będzie szukać, sprawi, że spróbuję znaleźć coś na miejscu.

122
00:08:00,420 --> 00:08:02,320
W takim przypadku nie będzie w stanie go znaleźć.

123
00:08:02,340 --> 00:08:06,380
Pozwólcie, że spróbuję znaleźć coś w ramach włączonej funkcji, którą faktycznie skomentowałem.

124
00:08:06,390 --> 00:08:07,740
Więc go tam nie znajduję.

125
00:08:07,740 --> 00:08:12,810
Następnym krokiem jest więc, aby zacząć szukać czegoś na poziomie globalnym w zasadzie z zerową, a

126
00:08:12,810 --> 00:08:13,480
następnie Stacją.

127
00:08:13,560 --> 00:08:15,870
I widzimy tę globalną zmienną poziomu.

128
00:08:16,080 --> 00:08:18,730
Więc zamierzam go uratować.

129
00:08:18,860 --> 00:08:19,970
A teraz wracam.

130
00:08:19,970 --> 00:08:27,380
Jest to poziom globalny, więc możemy wyraźnie zobaczyć, w jaki sposób Python podejmuje kroki lokalne, włączając

131
00:08:27,440 --> 00:08:28,610
globalne i wbudowane.

132
00:08:28,700 --> 00:08:31,660
A tak naprawdę chodźmy i pokaż im teraz wszystko.

133
00:08:33,050 --> 00:08:35,900
Pozwól, że upewnię się, że odpowiedź została udzielona poprawnie.

134
00:08:37,870 --> 00:08:46,090
Powiem tutaj lokalnie, więc uruchommy to jeszcze raz i bicze, upewnię się, że moje wcięcie jest poprawne.

135
00:08:46,120 --> 00:08:47,490
Tam znowu to bierzemy.

136
00:08:47,750 --> 00:08:53,670
A teraz widzę lokalnie, więc widzę poziom lokalny i gdybym chciał to skomentować, zapisałbym go i

137
00:08:53,670 --> 00:08:54,820
uruchomiłbym go ponownie.

138
00:08:54,920 --> 00:09:00,620
Potem widzę poziom w tym miejscu, jeśli mam komentować, że go zapiszę i uruchomię ponownie.

139
00:09:00,720 --> 00:09:02,670
Potem widzę poziom globalny.

140
00:09:02,670 --> 00:09:06,180
Mam nadzieję, że jest to naprawdę jasny obraz tego, jak działa Python.

141
00:09:06,180 --> 00:09:08,480
Lokalne i globalne.

142
00:09:08,670 --> 00:09:12,440
Teraz powiedzmy, że nie możesz znaleźć czegoś w świecie.

143
00:09:12,500 --> 00:09:15,250
Będzie wtedy szukać wbudowanej przestrzeni nazw.

144
00:09:15,380 --> 00:09:18,920
I w tym przypadku są to funkcje i

145
00:09:18,920 --> 00:09:27,140
słowa kluczowe, które już znasz, takie jak długość lub niektóre książki lub niektóre lub maksimum tego rodzaju rzeczy.

146
00:09:27,140 --> 00:09:31,280
Więc jeśli nie może znaleźć go jako wbudowanej zmiennej, to po prostu da ci błąd i

147
00:09:31,340 --> 00:09:33,060
powie, że hej X nie jest zdefiniowany.

148
00:09:33,140 --> 00:09:36,430
Więc jeśli to zrobimy, powiem hej, przepraszam, imię x nie jest znaleziskiem.

149
00:09:36,440 --> 00:09:39,230
Może to nie będzie takie przepraszające, ale wpadniesz na pomysł.

150
00:09:40,300 --> 00:09:44,680
Ostatnią rzeczą, którą chcę tutaj objąć, są tylko zmienne lokalne i zmienne globalne.

151
00:09:44,740 --> 00:09:51,910
Rozumiemy już ogólny zasięg, w jaki sposób idziemy lokalnie, włączając globalne i wbudowane, w zasadzie kolejność,

152
00:09:51,910 --> 00:09:55,220
w której Python będzie szukał definicji zmiennych w.

153
00:09:55,570 --> 00:09:59,720
Wróćmy jednak do pierwotnego przykładu raportu.

154
00:10:00,070 --> 00:10:03,760
Więc pamiętaj, że usunę wszystko tutaj.

155
00:10:03,760 --> 00:10:16,820
Pamiętajmy, że mieliśmy coś, co powiedziało X na zewnątrz, a potem mówimy, że Port x jest równy wewnątrz, a my zwracamy X, a

156
00:10:16,970 --> 00:10:17,470
następnie

157
00:10:20,860 --> 00:10:25,710
mówię "iść naprzód" i wydrukować raport dla mnie.

158
00:10:26,230 --> 00:10:32,260
Kiedy nasze palce uruchamiają to powiadomienie, wracam do środka, ponieważ teraz rozumiemy, że najpierw będzie

159
00:10:32,350 --> 00:10:34,720
to wyglądało lokalnie dla tego zakresu.

160
00:10:34,720 --> 00:10:41,200
Teraz może zdarzyć się, że rzeczywiście chcesz zmienić tę konkretną wartość, która jest globalna.

161
00:10:41,200 --> 00:10:43,210
Więc pytanie brzmi: jak to zrobić.

162
00:10:43,300 --> 00:10:48,580
Właściwie to wychodzę i mówię Pythonowi Hey, kiedy robię to x jest równe w środku Ja tak

163
00:10:48,580 --> 00:10:51,820
naprawdę chcę zmienić również tę zmienną globalną, aby to zrobić.

164
00:10:51,840 --> 00:10:53,870
Użyj słowa kluczowego global.

165
00:10:53,890 --> 00:10:58,950
Pamiętaj, że powinieneś być bardzo ostrożny i większość użytkowników Pythona często nie używa tego słowa

166
00:10:58,960 --> 00:10:59,380
kluczowego.

167
00:10:59,380 --> 00:11:03,270
W rzeczywistości należy tego unikać, ponieważ jest tak potężny.

168
00:11:03,340 --> 00:11:08,470
Zasadniczo można naprawdę łatwo zmienić przypisanie wszystkiego do funkcji w skrypcie i trochę się

169
00:11:08,470 --> 00:11:12,390
spieprzyć, więc tam właśnie chcesz to zrobić z wielką ostrożnością.

170
00:11:12,400 --> 00:11:14,710
Pokażę ci, jak to działa.

171
00:11:14,710 --> 00:11:16,860
Tak więc sposób działania tego działa w następujący sposób.

172
00:11:17,940 --> 00:11:24,750
Zamierzam powiedzieć, że x jest równy zewnętrznemu, a następnie w moim raporcie zamierzam

173
00:11:24,750 --> 00:11:35,550
powiedzieć Global X, a to w zasadzie mówi Pythonowi Hey, że wybieram globalną zmienną x poziomu, a gdy już to

174
00:11:35,550 --> 00:11:39,510
zrobi, to zmieni przypisanie globalnego x .

175
00:11:39,540 --> 00:11:41,970
To nie jest już tylko lokalne zadanie.

176
00:11:41,970 --> 00:11:45,200
W rzeczywistości mówi on słowu kluczowemu Python Hej globalnie.

177
00:11:45,270 --> 00:11:50,310
Oznacza to, że ten X będzie odwoływał się do tego poza globalnym X, a kiedy

178
00:11:50,310 --> 00:11:52,580
powiesz x jest równy wewnętrznej, zwrócisz x.

179
00:11:52,620 --> 00:11:57,000
Więc kiedy faktycznie to uruchomimy, nie zobaczymy niczego innego.

180
00:11:57,030 --> 00:12:06,150
Wciąż będziemy widzieć, co będzie innego, jeśli poprosimy o Python do księcia X.

181
00:12:06,190 --> 00:12:10,000
Po wywołaniu funkcja raportu wie, co się dzieje.

182
00:12:10,000 --> 00:12:12,760
Teraz dostaję się do środka.

183
00:12:12,850 --> 00:12:19,030
Jeśli miałbym usunąć to globalne połączenie, więc nadal mam x jest równy zewnętrznej.

184
00:12:19,300 --> 00:12:21,720
A teraz po prostu ponownie przypisuję lokalnie.

185
00:12:22,210 --> 00:12:29,860
Kiedy zapisuję i uruchamiam to, co widzę na zewnątrz, to tylko wtedy, gdy nazywam to globalne słowo kluczowe, że Python

186
00:12:29,890 --> 00:12:33,630
zasadniczo ma teraz pozwolenie na wejście do globalnej przestrzeni nazw.

187
00:12:33,670 --> 00:12:37,300
Chwyć zmienną x i wykonaj ponowne przypisanie na całym świecie.

188
00:12:37,300 --> 00:12:44,150
Do tego czasu nie będziesz w stanie wpłynąć na zakres tej zmiennej x i tej funkcji.

189
00:12:44,480 --> 00:12:47,340
OK, to podstawy podstaw.

190
00:12:47,350 --> 00:12:52,300
Ponownie ogólne słowo kluczowe, jeśli zaczynasz uczyć się na tym poziomie Pythona, powinieneś

191
00:12:52,300 --> 00:12:54,070
po prostu go całkowicie unikać.

192
00:12:54,070 --> 00:12:55,620
Zamiast tego powinieneś go przekazać.

193
00:12:55,630 --> 00:12:57,630
Jeśli kiedykolwiek zechcesz z nim pracować.

194
00:12:57,780 --> 00:13:03,600
Mam na myśli to, że jeśli z jakiegoś powodu chcesz pracować z tą zmienną poza zmienną, gdzie

195
00:13:03,610 --> 00:13:10,330
możesz to zrobić, możesz po prostu przekazać ją w raporcie X, a następnie powiedzieć x jest równe wewnętrznemu zwrotowi x.

196
00:13:10,540 --> 00:13:14,780
Możesz więc powiedzieć X tutaj, a następnie bawić się w ten sposób.

197
00:13:14,830 --> 00:13:18,060
Tutaj zauważysz, że dostaliśmy się do środka, a potem wciąż wychodzimy na zewnątrz.

198
00:13:18,060 --> 00:13:24,550
Jest to o wiele bezpieczniejszy sposób dokonywania jakichkolwiek zmian przy jednoczesnym dostępie do początkowego

199
00:13:24,820 --> 00:13:25,680
globalnego systemu.

200
00:13:25,690 --> 00:13:35,760
Więc na przykład mógłbym jeszcze napisać x tutaj, więc powinienem zajrzeć na zewnątrz na zewnątrz, a

201
00:13:35,760 --> 00:13:38,410
tam jest na zewnątrz.

202
00:13:38,790 --> 00:13:42,380
OK, jeśli masz jakieś pytania, proszę opublikuj fora Kewneya.

203
00:13:42,420 --> 00:13:48,240
Mam nadzieję, że zaczynasz naprawdę zdobywać fundamentalne podstawy do już intuicyjnego rozumienia

204
00:13:48,240 --> 00:13:48,680
zakresu.

205
00:13:48,810 --> 00:13:54,000
Właśnie z twoich wykładów na temat funkcji na następnym wykładzie zaczniemy mówić o programowaniu obiektowym.

206
00:13:54,060 --> 00:13:54,770
Zobaczymy, czy.
